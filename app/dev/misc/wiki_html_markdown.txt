# Smooth Clicker
_A free open-source easy to use material-designed autoclicker for Android rooted devices._

This app can trigger software clicks thanks to system Shell commands executed as SU.
The app is open-source, easy to use and to configure and can make several clicks with delayed starts and pauses between each click.
You can also repeat clicks sequences and make infinite clicks loops.
The app possesses a dedicated Android service you can reach and trigger to make some click processes instead of using the GUI.

**Be aware this app is still in development and your device must be rooted**

_Why this app? Because I wanted to build my own autoclicker to make some tricks on games or on apps (like <a href="https://play.google.com/store/apps/details?id=com.mlt.woy&hl=fr">Woy !</a>)_

***
## Features
* device may vibrate on start and on each click
* device may display notifications when the process is on going, on clicks and when the countdown is running
* several points can be selected
* a sequence of clicks can be repeated, endlessly if needed
* a delay can be defined before each sequence of clicks
* a pause can me made between each click
* supported languages: English, French, Klingon

***
## Screen shots
<table>
<tr>
<td>
<img src="https://github.com/pylapp/SmoothClicker/blob/master/app/dev/misc/ui_v1.8.0/ui_snackbar_arcmenu_en.png" alt="Start or stops the process, add new points or ask for SU grant" title="Start or stops the process, add new points or ask for SU grant" width="200">
</td>
<td>
<img src="https://github.com/pylapp/SmoothClicker/blob/master/app/dev/misc/ui_v1.8.0/select_multipoint_en_1.png" alt="Select points everywhere on the device's screen" title="Select points everywhere on the device's screen" width="200">
</td>
</tr>
<tr>
<td>
<img src="https://github.com/pylapp/SmoothClicker/blob/master/app/dev/misc/ui_v1.8.0/select_multipoint_en_2.png" alt="Select several points" title="Select several points" width="200">
</td>
<td>
<img src="https://github.com/pylapp/SmoothClicker/blob/master/app/dev/misc/ui_v1.8.0/notification_on_going.png" alt="Notifications displayed during the process" title="Notifications displayed during the process" width="200">
</td>
</tr>
</table>

***
## How to use the service ?

_You can simply use the app itself, or use the embedded Android Service to reach :_

First, create the good intent:<br/>
`Intent intentServiceSmoothClicker = new Intent("pylapp.smoothclicker.android.clickers.ServiceClicker.START");`

Then define the configuration to set up:<br/>
`intentServiceSmoothClicker.putExtra("0x000011", true); // Start delayed ?`<br/>
`intentServiceSmoothClicker.putExtra("0x000012", 10);   // How much delay for the start ?`<br/>
`intentServiceSmoothClicker.putExtra("0x000013", 2);    // The amount of time to wait between clicks`<br/>
`intentServiceSmoothClicker.putExtra("0x000021", 5);    // The number of repeat to do`<br/>
`intentServiceSmoothClicker.putExtra("0x000022", false);// Endless repeat ?`<br/>
`intentServiceSmoothClicker.putExtra("0x000031", false);// Vibrate on start ?`<br/>
`intentServiceSmoothClicker.putExtra("0x000032", true);// Vibrate on each click ?`<br/>
`intentServiceSmoothClicker.putExtra("0x000041", true);// Make notifications ?`<br/>

Today the points to click on are in one list like:<br/>
`ArrayList<Integer> points = new ArrayList<Integer>();`<br/>
`points.add(252); // x0`<br/>
`points.add(674); // y0`<br/>
etc<br/>
`intentServiceSmoothClicker.putIntegerArrayListExtra("0x000051",points); // The list of points`<br/>

Finally, starts the service: <br/>
`startService(intentServiceSmoothClicker);`


***
## What's new?
* _v1.0.0 : Astonishing Ant_
    * first version of the app
* _v1.2.0_
    * vibrations on clicks, credits for third-party contents
* _v1.3.0 : Blazing Buffalo_
    * splash screen
* _v1.4.0 : Crazy Crane_
    * material designed components, exit dialog
* _v1.5.0 : Dumb dodo_
    * notifications about the clicks and the state of the app, back button
* _v1.5.1_
    * endless repeat, french support
* _v1.6.0 : Elastic Elephant_
    * selection of a point everywhere on the screen with a transparent view
* _v1.6.1_
    * selection of several points
* _v1.6.2_
    * shake to clean, settings view, more debug and more Javadoc HTML doc
* _v1.6.3_
    * notifications with countdowns for delayed starts
* _v1.7.0 : Freaky Fawn_
   * Klingon support
   * Service reachable from the outside
   * Some bugs fixes
* _v1.7.2_
    * MIT License
    * more debug 
* _v1.8.0 : Galactic Gorilla_
    * a lot of bugs have been fixed
    * improve the GUI
* _v1.8.1_
    * more fixed bugs
<!--
* _v1.8.2_
    * more refactor
    * optimization
-->




